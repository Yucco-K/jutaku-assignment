// docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id       String  @id @default(uuid()) @unique
  name     String
  email    String  @unique
  password String
  role     UserRole @default(USER)
  projects Project[]
  entries  Entry[]
}

model Project {
  id          String  @id @default(uuid()) @unique
  title       String
  overview    String?
  description String?
  price       Int?
  deadline    DateTime?
  created_at  DateTime @default(now())
  creator     User     @relation(fields: [creator_id], references: [id], onDelete: Cascade)
  creator_id  String
  entries     Entry[]
  skills      ProjectSkill[]
}

model Skill {
  id   String  @id @default(uuid()) @unique
  name String  @unique
  projects ProjectSkill[]
}

model ProjectSkill {
  id        String  @id @default(uuid()) @unique
  project   Project @relation(fields: [project_id], references: [id], onDelete: Cascade)
  project_id String
  skill     Skill   @relation(fields: [skill_id], references: [id], onDelete: Cascade)
  skill_id  String
}

enum EntryStatus {
  PENDING
  APPROVED
  REJECTED
}

model Entry {
  id         String  @id @default(uuid()) @unique
  status     EntryStatus
  entry_date DateTime @default(now())
  project    Project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  project_id String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
}
